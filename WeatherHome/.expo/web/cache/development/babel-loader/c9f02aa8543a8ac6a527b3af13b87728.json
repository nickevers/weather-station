{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Documenten\\\\Project\\\\weather-station\\\\WeatherHome\\\\App.js\",\n    _this = this;\n\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nfunction _renderItem(item) {\n  return React.createElement(TouchableOpacity, {\n    style: {\n      flex: 1 / 2,\n      aspectRatio: 1,\n      backgroundColor: 'blue',\n      margin: 4,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, item.title, \", \", item.releaseYear));\n}\n\nexport default App = function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  useEffect(function () {\n    fetch('http://192.168.1.9:5000/current').then(function (response) {\n      return console.log(response.json);\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json.movies);\n    }).then(function (json) {\n      return console.log(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingLeft: 8,\n      paddingRight: 8,\n      paddingTop: 24,\n      backgroundColor: 'dimgray',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }\n  }) : React.createElement(FlatList, {\n    numColumns: 2,\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _renderItem(item);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["D:/Documenten/Project/weather-station/WeatherHome/App.js"],"names":["React","useEffect","useState","renderItem","item","flex","aspectRatio","backgroundColor","margin","justifyContent","alignItems","title","releaseYear","App","isLoading","setLoading","data","setData","fetch","then","response","console","log","json","movies","catch","error","finally","paddingLeft","paddingRight","paddingTop","textAlign","index","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAGA,SAASC,WAAT,CAAoBC,IAApB,EAA0B;AACxB,SACI,oBAAC,gBAAD;AACS,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAC,IAAE,CAAR;AACPC,MAAAA,WAAW,EAAC,CADL;AAEPC,MAAAA,eAAe,EAAE,MAFV;AAGPC,MAAAA,MAAM,EAAE,CAHD;AAIPC,MAAAA,cAAc,EAAE,QAJT;AAKPC,MAAAA,UAAU,EAAE;AALL,KADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,IAAI,CAACO,KAAZ,QAAqBP,IAAI,CAACQ,WAA1B,CARR,CADJ;AAYD;;AAED,eAAeC,GAAG,GAAG,eAAM;AAAA,kBACOX,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,MAClBY,SADkB;AAAA,MACPC,UADO;;AAAA,mBAEDb,QAAQ,CAAC,EAAD,CAFP;AAAA;AAAA,MAElBc,IAFkB;AAAA,MAEZC,OAFY;;AAMzBhB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CAAd;AAAA,KADR,EAEGJ,IAFH,CAEQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACG,IAAT,EAAd;AAAA,KAFR,EAGGJ,IAHH,CAGQ,UAACI,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAI,CAACC,MAAN,CAAjB;AAAA,KAHR,EAIGL,IAJH,CAIQ,UAACI,IAAD;AAAA,aAAUF,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAAV;AAAA,KAJR,EAKGE,KALH,CAKS,UAACC,KAAD;AAAA,aAAWL,OAAO,CAACK,KAAR,CAAcA,KAAd,CAAX;AAAA,KALT,EAMGC,OANH,CAMW;AAAA,aAAMZ,UAAU,CAAC,KAAD,CAAhB;AAAA,KANX;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEV,MAAAA,IAAI,EAAE,CAAR;AAAWuB,MAAAA,WAAW,EAAE,CAAxB;AAA2BC,MAAAA,YAAY,EAAE,CAAzC;AAA4CC,MAAAA,UAAU,EAAE,EAAxD;AAA4DvB,MAAAA,eAAe,EAAE,SAA7E;AAAwFwB,MAAAA,SAAS,EAAE;AAAnG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACR,oBAAC,QAAD;AACA,IAAA,UAAU,EAAE,CADZ;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,YAAY,EAAE,4BAASgB,KAAT;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,aAAmBA,EAAnB;AAAA,KAHhB;AAIE,IAAA,UAAU,EAAE;AAAA,UAAG7B,IAAH,SAAGA,IAAH;AAAA,aAAcD,WAAU,CAACC,IAAD,CAAxB;AAAA,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAYD,CA5BD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, FlatList, Text, View, TouchableOpacity } from 'react-native';\n\nfunction renderItem(item) {\n  return (\n      <TouchableOpacity  \n               style={{flex:1/2,\n               aspectRatio:1,\n               backgroundColor: 'blue',\n               margin: 4,\n               justifyContent: 'center', //Centered vertically\n               alignItems: 'center', // Centered horizontally\n               }}>\n              <Text>{item.title}, {item.releaseYear}</Text>\n      </TouchableOpacity>\n  )\n}\n\nexport default App = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  \n\n  useEffect(() => {\n    fetch('http://192.168.1.9:5000/current')\n      .then((response) => console.log(response.json))\n      .then((response) => response.json())\n      .then((json) => setData(json.movies))\n      .then((json) => console.log(json))\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <View style={{ flex: 1, paddingLeft: 8, paddingRight: 8, paddingTop: 24, backgroundColor: 'dimgray', textAlign: 'center' }}>\n      {isLoading ? <ActivityIndicator/> : (\n        <FlatList\n        numColumns={2}\n          data={data}\n          keyExtractor={({ id }, index) => id}\n          renderItem={({ item }) => renderItem(item)}\n        />\n      )}\n    </View>\n  );\n};"]},"metadata":{},"sourceType":"module"}